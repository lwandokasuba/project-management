// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/lwandokasuba/project-management/ent/assignment"
	"github.com/lwandokasuba/project-management/ent/project"
	"github.com/lwandokasuba/project-management/ent/schema"
	"github.com/lwandokasuba/project-management/ent/statement"
	"github.com/lwandokasuba/project-management/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	assignmentMixin := schema.Assignment{}.Mixin()
	assignmentMixinFields0 := assignmentMixin[0].Fields()
	_ = assignmentMixinFields0
	assignmentFields := schema.Assignment{}.Fields()
	_ = assignmentFields
	// assignmentDescCreateTime is the schema descriptor for create_time field.
	assignmentDescCreateTime := assignmentMixinFields0[0].Descriptor()
	// assignment.DefaultCreateTime holds the default value on creation for the create_time field.
	assignment.DefaultCreateTime = assignmentDescCreateTime.Default.(func() time.Time)
	// assignmentDescUpdateTime is the schema descriptor for update_time field.
	assignmentDescUpdateTime := assignmentMixinFields0[1].Descriptor()
	// assignment.DefaultUpdateTime holds the default value on creation for the update_time field.
	assignment.DefaultUpdateTime = assignmentDescUpdateTime.Default.(func() time.Time)
	// assignment.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	assignment.UpdateDefaultUpdateTime = assignmentDescUpdateTime.UpdateDefault.(func() time.Time)
	// assignmentDescTitle is the schema descriptor for title field.
	assignmentDescTitle := assignmentFields[1].Descriptor()
	// assignment.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	assignment.TitleValidator = assignmentDescTitle.Validators[0].(func(string) error)
	// assignmentDescID is the schema descriptor for id field.
	assignmentDescID := assignmentFields[0].Descriptor()
	// assignment.DefaultID holds the default value on creation for the id field.
	assignment.DefaultID = assignmentDescID.Default.(func() uuid.UUID)
	projectMixin := schema.Project{}.Mixin()
	projectMixinFields0 := projectMixin[0].Fields()
	_ = projectMixinFields0
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescCreateTime is the schema descriptor for create_time field.
	projectDescCreateTime := projectMixinFields0[0].Descriptor()
	// project.DefaultCreateTime holds the default value on creation for the create_time field.
	project.DefaultCreateTime = projectDescCreateTime.Default.(func() time.Time)
	// projectDescUpdateTime is the schema descriptor for update_time field.
	projectDescUpdateTime := projectMixinFields0[1].Descriptor()
	// project.DefaultUpdateTime holds the default value on creation for the update_time field.
	project.DefaultUpdateTime = projectDescUpdateTime.Default.(func() time.Time)
	// project.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	project.UpdateDefaultUpdateTime = projectDescUpdateTime.UpdateDefault.(func() time.Time)
	// projectDescName is the schema descriptor for name field.
	projectDescName := projectFields[1].Descriptor()
	// project.NameValidator is a validator for the "name" field. It is called by the builders before save.
	project.NameValidator = projectDescName.Validators[0].(func(string) error)
	// projectDescID is the schema descriptor for id field.
	projectDescID := projectFields[0].Descriptor()
	// project.DefaultID holds the default value on creation for the id field.
	project.DefaultID = projectDescID.Default.(func() uuid.UUID)
	statementMixin := schema.Statement{}.Mixin()
	statementMixinFields0 := statementMixin[0].Fields()
	_ = statementMixinFields0
	statementFields := schema.Statement{}.Fields()
	_ = statementFields
	// statementDescCreateTime is the schema descriptor for create_time field.
	statementDescCreateTime := statementMixinFields0[0].Descriptor()
	// statement.DefaultCreateTime holds the default value on creation for the create_time field.
	statement.DefaultCreateTime = statementDescCreateTime.Default.(func() time.Time)
	// statementDescUpdateTime is the schema descriptor for update_time field.
	statementDescUpdateTime := statementMixinFields0[1].Descriptor()
	// statement.DefaultUpdateTime holds the default value on creation for the update_time field.
	statement.DefaultUpdateTime = statementDescUpdateTime.Default.(func() time.Time)
	// statement.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	statement.UpdateDefaultUpdateTime = statementDescUpdateTime.UpdateDefault.(func() time.Time)
	// statementDescID is the schema descriptor for id field.
	statementDescID := statementFields[0].Descriptor()
	// statement.DefaultID holds the default value on creation for the id field.
	statement.DefaultID = statementDescID.Default.(func() uuid.UUID)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userMixinFields0[0].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() time.Time)
	// userDescUpdateTime is the schema descriptor for update_time field.
	userDescUpdateTime := userMixinFields0[1].Descriptor()
	// user.DefaultUpdateTime holds the default value on creation for the update_time field.
	user.DefaultUpdateTime = userDescUpdateTime.Default.(func() time.Time)
	// user.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	user.UpdateDefaultUpdateTime = userDescUpdateTime.UpdateDefault.(func() time.Time)
	// userDescPasswordHash is the schema descriptor for password_hash field.
	userDescPasswordHash := userFields[2].Descriptor()
	// user.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	user.PasswordHashValidator = userDescPasswordHash.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
