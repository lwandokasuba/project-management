@page "/projects"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using Projects.Models
@using Projects.Data
@implements IAsyncDisposable
@inject IDbContextFactory<ApplicationDbContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<div>
    <input type="search" @bind="titleFilter" @bind:event="oninput" />
</div>

<p>
    <a href="projects/create">Create New</a>
</p>

<div>
    <QuickGrid Class="table" Items="FilteredProjects" Pagination="pagination">
        <PropertyColumn Property="project => project.Name" Sortable="true" />
        <PropertyColumn Property="project => project.StartDate" Title="Release Date" />
        <PropertyColumn Property="project => project.EndDate" />
        <PropertyColumn Property="project => project.Status" />

        <TemplateColumn Context="project">
            <a href="@($"projects/edit?id={project.ProjectId}")">Edit</a> |
            <a href="@($"projects/details?id={project.ProjectId}")">Details</a> |
            <a href="@($"projects/delete?id={project.ProjectId}")">Delete</a>
        </TemplateColumn>
    </QuickGrid>
</div>

<Paginator State="pagination" />

@code {
    private ApplicationDbContext context = default!;
    private PaginationState pagination = new PaginationState { ItemsPerPage = 5 };
    private string titleFilter = string.Empty;

    private IQueryable<Project> FilteredProjects =>
        context.Projects.Where(m => m.Name!.Contains(titleFilter));

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
