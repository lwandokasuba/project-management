@page "/projects/create"
@using Microsoft.EntityFrameworkCore
@using Projects.Models
@inject IDbContextFactory<Projects.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Project</h2>
<hr />
<div class="row">
  <div class="col-md-4">
    <EditForm method="post" Model="Project" OnValidSubmit="AddProject" FormName="create" Enhance>
      <DataAnnotationsValidator />
      <ValidationSummary class="text-danger" role="alert" />
      <div class="mb-3">
        <label for="name" class="form-label">Name:</label>
        <InputText id="name" aria-required="true" @bind-Value="Project.Name" class="form-control" />
        <ValidationMessage For="() => Project.Name" class="text-danger" />
      </div>
      <div class="mb-3">
        <label for="description" class="form-label">Description:</label>
        <InputText id="description" aria-required="true" @bind-Value="Project.Description" class="form-control" />
        <ValidationMessage For="() => Project.Description" class="text-danger" />
      </div>
      <div class="mb-3">
        <label for="startdate" class="form-label">Start Date:</label>
        <InputDate id="startdate" @bind-Value="Project.StartDate" class="form-control" />
        <ValidationMessage For="() => Project.StartDate" class="text-danger" />
      </div>
      <div class="mb-3">
        <label for="enddate" class="form-label">End Date:</label>
        <InputDate id="enddate" @bind-Value="Project.EndDate" class="form-control" />
        <ValidationMessage For="() => Project.EndDate" class="text-danger" />
      </div>
      <div class="mb-3">
        <label for="status" class="form-label">Status:</label>
        <InputSelect id="status" @bind-Value="Project.Status" class="form-select">
          <option value="">Select...</option>
          @foreach (var status in Enum.GetValues(typeof(ProjectStatus)))
          {
            <option value="@status">@status</option>
          }
        </InputSelect>
        <ValidationMessage For="() => Project.Status" class="text-danger" />

      </div>
      <br />
      <button type="submit" class="btn btn-primary">Create</button>
    </EditForm>
  </div>
</div>

<div>
  <a href="/projects">Back to List</a>
</div>

@code {
  [SupplyParameterFromForm]
  private Project Project { get; set; } = new()
  {
    Name = string.Empty,
    StartDate = DateTime.Now,
    Status = ProjectStatus.CREATED
  };

  private async Task AddProject()
  {
    using var context = DbFactory.CreateDbContext();
    context.Projects.Add(Project);
    await context.SaveChangesAsync();
    NavigationManager.NavigateTo("/projects");
  }
}
